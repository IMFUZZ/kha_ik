<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Frameset//EN" "http://www.w3.org/tr/html4/frameset.dtd">
<html>
<head>
    <title>::config.title::</title>
	<link rel="stylesheet" type="text/css" href="::meta.stylesheet::" />
<script type="text/javascript">
function windowTitle() {
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="Overview (::config.title::)";
    }
}

function show(name) {
    var link = document.getElementById(name+"link");
    link.href = "javascript:hide(\""+name+"\")";
    var img = link.children[0];
    img.alt = "-";
    img.src = "images/hide.png";
}

function hide(name) {
    var div = document.getElementById(name);
    div.innerHTML = '';
    var link = document.getElementById(name+"link");
    link.href = "javascript:show"+name+"()";
    var img = link.children[0];
    img.alt = "+";
    img.src = "images/show.png";
}

::foreach p config.allPackages::
function show::p.fullnodot::() {
    var div = document.getElementById("::p.fullnodot::");
    var html = '';
    ::foreach i p.types::
    html += '<li class="::i.type::"><a href="types/::i.subdir::::i.name::::config.htmlFileExtension::" title="::i.name::">::i.name::</a></li>';
    ::end::
    div.innerHTML = html;
    show("::p.fullnodot::");
}
::end::
</script>

<noscript></noscript>
</head>
<body onload="windowTitle();">

<script language="javascript" type="text/javascript" src="chxdoc.js"></script>

<div class="tdoc">
    <div class="tdoctitle">
        <h1 class="::type::">Overview</h1>
    </div>
    <div class="tdoclink">
        <a href="#top">Top</a>
        | <a href="#mod-nape">nape</a>
        | <a href="#mod-nape-hacks">nape-hacks</a>
        | <a href="#mod-nape-symbolic">nape-symbolic</a>
    </div>
</div>

<div id="menu" class="tmenu">
<ul class="types">
    <li class="overview">
        <a href="index.html" title="Overview">&nbsp;&nbsp;Overview</a>
    </li>
    ::foreach p config.allPackages::
    <li class="pckg">
        <a class="expand" href="javascript:show::p.fullnodot::()" id="::p.fullnodot::link">
            <img class="descript" alt="+" src="images/show.png"/>
        </a>
        ::p.full::
    </li>
    <div class="pckgtypes" id="::p.fullnodot::">
    </div>
    ::end::
</ul>
</div>

<div class="gdoc" id="main">
<a name="top"></a>
	<div id="class-frame" class="type-frame">
    <h1>API Documentation for Nape Physics Library</h1>
    <a name="mod-nape"/><div class="module">
        <dl>
            <dt>module</dt>
            <dd>nape</dd>
            <dt>dependencies</dt>
            <dd>None</dd>
        </dl>
        Base library of Nape, including everything required for a simulation together with geometric utilities
        and debug drawing.
        <br/><br/>
        Various constraints included with the UserConstraint API for hand-written custom constraints.
        <br/><br/>
        UML Diagram of relationships between Nape classes in the core library:
        <br/><br/>
        <img src="images/structure.png"/>
    </div>
    <br/><br/>
    <a name="mod-nape-hacks"/><div class="module">
        <dl>
            <dt>module</dt>
            <dd>nape-hacks</dd>
            <dt>dependencies</dt>
            <dd>nape</dd>
        </dl>
        nape-hacks provides additional methods permitting manual sleeping of objects in a Space as well as
        addition of already sleeping objects to a Space.
        <br/><br/>
        This is not included in the core library as it goes against the mantra of Nape where sleeping is
        something that is handled completely by Nape with no user input necessary.
        <br/><br/>
        See: <a href="types/nape/hacks/ForcedSleep.html">ForcedSleep</a>
    </div>
    <br/><br/>
    <a name="mod-nape-symbolic"/><div class="module">
        <dl>
            <dt>module</dt>
            <dd>nape-symbolic</dd>
            <dt>dependencies</dt>
            <dd>nape, parsex (Haxe only)</dd>
        </dl>
        nape-symbolic provides an additional constraint type built ontop of the UserConstraint API.
        This constraint takes as input a single String written in a light weight DSL permitting rapid
        prototyping of complex custom constraints which may be used, or further transformed by hand
        into a hand-optimised UserConstraint.
        <br/><br/>
        See: <a href="types/nape/symbolic/SymbolicConstraint.html">SymbolicConstraint</a>
    </div>
    </div>
    <br/>
</div>
<script type="text/javascript">window.onresize();</script>
</body>
</html>
