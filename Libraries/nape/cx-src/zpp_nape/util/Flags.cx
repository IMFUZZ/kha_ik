package zpp_nape.util;
$(import);

/**

    Safe, cross AS3/haXe, haxe/c++ style enumerations.

    enum Type {
        Val1 = 1,
        Val2 = 2,
        Val3 = 3,
    };

    becomes:

    Flags(Type,
        prop(Val1, 1)
        prop(Val2, 2)
        prop(Val3, 3)
    )

    producing at point of call:

    class Type {
        lazy static readonly Val1 : Type;
        lazy static readonly Val2 : Type;
        lazy static readonly Val3 : Type;
    }

    with integer values (UNIQUE!) for internal use via zpp_nape.util.Flags::Flags(Type,x)

    Since internally, integer values would be typed as Int, for code readability

    Flag(X) can be used as a typedef to Int.
**/

$(mixin global Flags(F,defs)
@:final class F {
    !!/**
    !! * @private
    !! */
    public function new() {
        DEBUG(if(!PR(Flags).internal)
            throw "Error: Cannot instantiate "+$str(F)+" derp!";
        )
    }

    !!/**
    !! * @private
    !! */
    @:$keep public function toString() {
        if(false) return "";
        $(expand object tostring(N) else if(this==N) return $str(N););
        else return "";
    }

    $(mixin prop(N,I)
        FlagsInit(N,F,I)
        tostring(N)

        #if nape_swc @:isVar #end public static var N(get_`N,never):F;
        force_inline static function get_`N() {
            if(PR(Flags).F`_`N==null) {
                PR(Flags).internal = true;
                PR(Flags).F`_`N = new F();
                PR(Flags).internal = false;
            }
            return PR(Flags).F`_`N;
        }
    );

    defs
}
);

//--------------------------------------------------------------------------

$(mixin global PRFlags(F,defs)
    $(mixin prop(N,I)
        FlagsInitID(N,F,I)
    );
    defs
);

class PR(Flags) {
    public static var internal:Bool = false;

    $(expand global FlagsInitID(N,F,I)
        public static force_inline var id_`F`_`N = I;
    );
    $(expand global FlagsInit(N,F,I)
        public static var F`_`N:F;
        FlagsInitID(N,F,I)
    );
}

$(mixin global Flag(F,N) PR(Flags).id_`F`_`N);

$(mixin global Flag(F) Int);
