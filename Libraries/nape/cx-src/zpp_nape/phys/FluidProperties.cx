package zpp_nape.phys;
$(import);

class PR(FluidProperties) {

    PRFeatureMix(FluidProperties,fluidProperties)

    public function copy() {
        var ret; Get(PR(FluidProperties), ret);
        ret.viscosity = viscosity;
        ret.density = density;
        return ret;
    }

    public function new() {
        feature_cons();
        density = viscosity = 1;
        wrap_gravity = null;
        vec_set(gravity,0,0);
    }

    //----------------------------------------------------------------------------------------------

    public var viscosity:Float = 0.0;
    public var density:Float = 0.0;
    vec_new(public, gravity); public var wrap_gravity:Vec2 = null;

    //previously lambdas
    private function gravity_invalidate(x:PR(Vec2)) {
        vec_set(gravity,x.);
        invalidate();
    }
    private function gravity_validate() {
        vec_set(wrap_gravity.pr(inner).,gravity);
    }

    public function getgravity() {
        wrap_gravity = Vec2.get(gravityx,gravityy);
        wrap_gravity.pr(inner)._inuse = true;
        wrap_gravity.pr(inner)._invalidate = gravity_invalidate;
        wrap_gravity.pr(inner)._validate = gravity_validate;
    }

    public function invalidate() {
        Iter(shape,shapes,shape.invalidate_fluidprops());
    }
}
