package zpp_nape;
$(import);

class PR(Const) {
    #if flash
        //cannot use POSITIVE_INFINITY due to haxe bug
        //cannot use untyped __global__["Number"].POSITIVE_INFINITY due to some strange memory consumption.
        public static inline function POSINF() { return  1.79e+308; }
        public static inline function NEGINF() { return -1.79e+308; }
    #else
        public static inline function POSINF() { return Math.POSITIVE_INFINITY; }
        public static inline function NEGINF() { return Math.NEGATIVE_INFINITY; }
    #end
    public static inline var FMAX = 1e100;

    //get around limitation of Std.is
    #if flash10
        public static var vec2vector = Type.getClass(new flash.Vector<Vec2>());
        public static var cbtypevector = Type.getClass(new flash.Vector<CbType>());
        public static var optiontypevector = Type.getClass(new flash.Vector<OptionType>());
    #end
}
