package nape.geom;
$(import);

//operating in geometric environment.
geom(

!!/**
!! * Haxe compatible iterator over vertices of GeomPoly.
!! * <br/><br/>
!! * Vec2's intrinsically tied to the vertices are exposed through
!! * the iterator which does not modify the state of the polygon.
!! */
class GeomVertexIterator {
    !!/**
    !! * @private
    !! */
    public var pr(inner):PR(GeomVertexIterator);

    !!/**
    !! * @private
    !! */
    public function new() {
        DEBUG(
            if (!PR(GeomVertexIterator).internal) {
                throw "Error: Cannot instantiate GeomVertexIterator";
            }
        )
    }

    !!/**
    !! * Check if there are any vertices remaining.
    !! *
    !! * @return True if there are more vertices to iterate over.
    !! */
    public function hasNext():Bool {
        DEBUG(
            if (pr(inner) == null) {
                throw "Error: Iterator has been disposed";
            }
        )

        var ret = pr(inner).ptr != pr(inner).start || pr(inner).first;
        pr(inner).first = false;

        // Release iterator to object pool on completion.
        if (!ret) {
            Free(PR(GeomVertexIterator),pr(inner));
        }

        return ret;
    }

    !!/**
    !! * Return next vertex in list.
    !! * <br/><br/>
    !! * The vertex is represented by an intrinsically linked Vec2
    !! * unique to that vertex, which cannot be diposed of.
    !! *
    !! * @return The next vertex in iteration.
    !! */
    public function next():Vec2 {
        DEBUG(
            if (pr(inner) == null) {
                throw "Error: Iterator has been disposed";
            }
        )

        var ret = pr(inner).ptr.wrapper();
        pr(inner).ptr =
            if (pr(inner).forward) pr(inner).ptr.next else pr(inner).ptr.prev;

        return ret;
    }
}

)
