package nape.callbacks;
$(import);

!!/**
!! * Callback object for Interaction type events.
!! * <br/><br/>
!! * This, like all other callback objects are automatically reused
!! * and you should not keep any reference to them.
!! */
@:final class InteractionCallback extends Callback {
    !!/**
    !! * @private
    !! */
    public function new() {
        super();
    }

    !!/**
    !! * First Interactor involved in callback event.
    !! * <br/><br/>
    !! * This interactor will have CbType set matched by the first
    !! * OptionType in InteractionListener
    !! */
    property(int1, Interactor, {
        return pr(inner).int1.outer_i;
    })

    !!/**
    !! * Second Interactor involved in callback event.
    !! * <br/><br/>
    !! * This interactor will have CbType set matched by the second
    !! * OptionType in InteractionListener
    !! */
    property(int2, Interactor, {
        return pr(inner).int2.outer_i;
    })

    //TODO
    !!/**
    !! * Existing arbiters between interactors.
    !! * <br/><br/>
    !! * This list will at present contain 'all' arbiters, not just those matching the
    !! * interactionType in the InteractionListener. (This may be subject to change).
    !! */
    property(arbiters, ArbiterList, {
        return pr(inner).wrap_arbiters;
    })

    !!/**
    !! * @private
    !! */
    @:$keep public override function toString() {
        var ret = "Cb:";
        ret += ["BEGIN","END","","","","","ONGOING"][pr(inner).event];
        ret += ":"+int1.toString()+"/"+int2.toString();
        ret += " : "+arbiters.toString();
        ret += " : listener: "+listener;
        return ret;
    }
}

